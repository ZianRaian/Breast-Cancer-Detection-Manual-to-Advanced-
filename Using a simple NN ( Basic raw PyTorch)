# Breast Cancer Detection using PyTorch

This project implements a simple neural network for breast cancer detection using PyTorch. The dataset used is the Breast Cancer Wisconsin dataset, which is preprocessed and used to train a binary classification model.

## Dataset
The dataset is sourced from the [Breast Cancer Detection GitHub repository](https://raw.githubusercontent.com/gscdit/Breast-Cancer-Detection/refs/heads/master/data.csv). It consists of multiple features extracted from digitized breast cancer biopsies and is used to classify tumors as malignant or benign.

## Requirements
Ensure you have the following dependencies installed:

```bash
pip install numpy pandas torch scikit-learn
```

## Preprocessing
1. The dataset is loaded using Pandas.
2. Unnecessary columns (`id` and `Unnamed: 32`) are dropped.
3. Features are standardized using `StandardScaler` from `scikit-learn`.
4. Labels are encoded using `LabelEncoder`.
5. The data is split into training and testing sets.
6. Data is converted to PyTorch tensors for model training.

## Model Implementation
A simple neural network is implemented in PyTorch with the following components:
- Randomly initialized weights and bias.
- Forward propagation using a sigmoid activation function.
- A binary cross-entropy loss function.

## Model Evaluation
The model's predictions on the test set are evaluated based on accuracy, comparing predicted values to actual labels.

## Running the Project
To execute the script, simply run:

```bash
python script.py
```

## Accuracy Calculation
The accuracy of the model is computed using PyTorch operations to compare predictions with ground truth labels.

## Future Improvements
- Implement a training loop with gradient descent optimization.
- Use a more sophisticated neural network with multiple layers.
- Experiment with different activation functions and loss functions.

## License
This project is open-source and available under the MIT License.

